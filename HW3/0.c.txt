#include<iostream>
#include<vector>

using namespace std;

vector<int> G, S;
vector<bool> visited;

int DFS(int v) {
    visited[v] = true;
    int t = 0;
    if(G[v] != -1 && !visited[G[v]])
        t += 1 + DFS(G[v]);
    visited[v] = false;
    return S[v] = t;
}

int main() {
    int  N, a, b;

    cin>>N;
    G.assign(N, -1);
    S.assign(N, -1);
    visited.assign(N, false);
    for(int i = 0; i < N; i++) {
        cin>>a>>b;
        G[a - 1] = b - 1;
    }

    int index = 0, length = 0;

    for(int i = 0; i < N; i++) {
        if(S[i] == -1) {
            DFS(i);
        }
        if(S[i] > length) {
            length = S[i];
            index = i;
        }
    }

    cout<<index+1;
}
