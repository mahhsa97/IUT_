#include <iostream>
#include <vector>

using namespace std;

int n, m, area;


vector<vector<char> > map , gone;

int DFS(int x, int y,char s) {
    if(y < 0) {
        y = m - 1;
    }

    if(y >= m) {
        y = 0;
    }

    if(x < 0 || x >= n) {
        return 0;
    }

    if(gone[x][y] != 0 || map[x][y] != s) {
        return 0;
    }

    gone[x][y] = 1;

    return 1 + DFS(x+1 , y ,s) + DFS(x-1 , y ,s) + DFS(x , y+1, s) + DFS(x , y - 1 , s);
}
int main() {
        int I , J , res;
        cin>>n>>m;

        map.resize(n,vector<char>(m));

        gone.resize(n,vector<char>(m));

        for(int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                cin >> map[i][j];
                gone[i][j] = 0;
            }
        }
        cin>>I>>J;

        char start = map[I][J];

        DFS(I, J , start);

        res = 0;
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < m; j++) {
                area = DFS(i, j,start);
                if(area > res) {
                    res = area;
                }
            }
        }

        cout<<res;

    return 0;
}