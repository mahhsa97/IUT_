#include <iostream>
#include <vector>
#include <string>
#include <queue>

using namespace std;

bool bfs(vector<vector<int> > G, int s, int t, vector<int>& Path)
{
    vector<bool> visited(G[0].size(),0);
    queue <int> q;
    q.push(s);
    visited[s] = true;
    Path[s]=-1;
    while (!q.empty())
    {
        int u = q.front();
        q.pop();

        for (int v=0; v<G[0].size(); v++)
        {
            if (visited[v]==false && G[u][v] > 0)
            {
                q.push(v);
                Path[v]=u;
                visited[v] = true;
            }
        }
    }

    return (visited[t]);
}

int main() {
    vector<vector<int> >G (2+26+10,vector<int>(2+26+10,0));
    string frs , sec;
    int DesFlow=0;
    vector<int> av;
    while (cin>>frs>>sec){
        G[0][frs[0]-'A' + 1 ]=frs[1]-'0';
        av.push_back(frs[0]-'A' + 1);
        DesFlow+=frs[1]-'0';
        for (int i = 0; i <sec.size()-1 ; ++i) {
            G[frs[0]-'A' + 1 ][sec[i]-'0' +27]=1;
        }

    }
    for (int j = 27; j <37 ; ++j) {
        G[j][37]=1;
    }
    vector<vector<int> >GPrime (2+26+10,vector<int>(2+26+10,0));
    GPrime = G;
    int MaxFlow = 0;
    vector<int> Path(38 , -1);
    while (bfs(GPrime,0, 37, Path))
    {

        int f = 100000000;
        for (int v=37; v!=0; v=Path[v])
        {
            int u = Path[v];
            f = min(f, GPrime[u][v]);
        }

        for (int v=37; v != 0; v=Path[v])
        {
            int u = Path[v];
            GPrime[u][v] -= f;
            GPrime[v][u] += f;
        }
        MaxFlow += f;
    }
    for (int k = 0; k < 37; ++k) {
        for (int i = 0; i <37 ; ++i) {
            G[k][i] -= GPrime[k][i];
        }
    }
    if(MaxFlow==DesFlow){
        bool f = true;
        string Final;
        for (int j = 27; j <37 ; ++j) {
            for (int i =0 ; i < av.size() ; ++i ) {
                if (G[av[i]][j] == 1) {
                    cout<<char('A'+av[i]-1);
                    f = false;
                    break;
                }
            }
            if(f){
                cout<<"_";
            }
            f= true;
        }
        cout<<Final;
    } else{
        cout<<"!";
    }
    return 0;
}