#include <iostream>
#include <queue>
#include <vector>

using namespace std;
typedef pair<int , int> pi;
typedef pair<pi , int> pii;


int main() {
    int n , e=0;
    cin>>n;
    vector<pii> edges;
    for (int i = 0; i <n ; ++i) {
        int size , num;
        cin>>size>>num;
        for (int j = 0; j <num; ++j) {
            int tmp;
            cin>>tmp;
            edges.push_back(make_pair(make_pair(i,tmp-1),size));
        }
    }
    vector<int > BF(n,-10000);


    BF[0]=0;
    int Cur = 1;
    bool updateflag=0 , winflag;
    while(true){
        for (int i = 0; i <edges.size() ; ++i) {
            int u = edges[i].first.first;
            int v = edges[i].first.second;
            int w = edges[i].second;
            if(BF[u]!= -10000 && BF[v]<BF[u]+w){
                BF[v]=BF[u]+w;
                updateflag=1;
            }
        }
        if(updateflag){
            updateflag=0;
            if(BF[n-1]+100>0)
            {
                winflag=1;
                break;
            }
        } else{
            if(BF[n-1]+100>0)
            {
                winflag=1;
                break;
            } else{
                winflag=0;
                break;
            }
        }
    }
    if(winflag){cout<<"winnable";}
    else{cout<<"hopeless";}
    return 0;
}